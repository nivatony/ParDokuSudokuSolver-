name: Deploy EKS Cluster

on:
  push:
    branches:
      - main  # Adjust to the branch you want to trigger the deployment from
    paths:
      - "iac/terraform/vpc/*"
      - "iac/terraform/vpc/dev/**"
      - "iac/terraform/Eks/*"

env:
  # TF_LOG: INFO
  AWS_ACCOUNT_NUMBER: 712699700534

defaults:
  run:
    shell: bash
    working-directory: ./iac/terraform/vpc
permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-north-1

      - name: Set up Terraform (vpc)
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0  # Adjust to your desired Terraform version
      

      - name: Initialize Terraform (vpc)
        run: terraform init
        

      - name: Apply Terraform changes (vpc)
        run: terraform apply -auto-approve
        

      - name: Save kubeconfig (vpc)
        run: terraform output kubeconfig > kubeconfig_vpc.yml
        

      # Add the Terraform plan, Terraform Plan Status, and Terraform Apply steps here
      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=./dev/terraform.tfvars -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -var-file=./dev/terraform.tfvars -auto-approve -input=false

      - name: Build Docker image
        run: docker build -t sudoku-solver-app .

      - name: Retrieve ECR login credentials
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 712699700534.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag Docker image
        run: docker tag sudoku-solver-app:latest 712699700534.dkr.ecr.us-east-1.amazonaws.com/sudoku-solver-app:latest

      - name: Push Docker image to ECR
        run: docker push 712699700534.dkr.ecr.us-east-1.amazonaws.com/sudoku-solver-app:latest

      - name: Deploy to EKS (vpc)
        run: kubectl apply -f sudoku-solver-deployment.yaml
        

      - name: Wait for rollout to complete (vpc)
        run: kubectl rollout status deployment/sudoku-solver-deployment
        

      - name: Update Kubernetes Ingress (root)
        run: kubectl apply -f sudoku-solver-ingress.yaml

      - name: Update Kubernetes Service (root)
        run: kubectl apply -f sudoku-solver-service.yaml
